package main

// Generated by https://quicktype.io

type SeaEvent struct {
	AssetEvents []AssetEvent `json:"asset_events"`
}

type AssetEvent struct {
	ApprovedAccount    interface{}         `json:"approved_account"`
	Asset              Asset               `json:"asset"`
	AssetBundle        interface{}         `json:"asset_bundle"`
	AuctionType        *string             `json:"auction_type"`
	BidAmount          *string             `json:"bid_amount"`
	CollectionSlug     string              `json:"collection_slug"`
	ContractAddress    ContractAddressEnum `json:"contract_address"`
	CreatedDate        string              `json:"created_date"`
	CustomEventName    interface{}         `json:"custom_event_name"`
	DevFeePaymentEvent interface{}         `json:"dev_fee_payment_event"`
	Duration           *string             `json:"duration"`
	EndingPrice        *string             `json:"ending_price"`
	EventType          EventType           `json:"event_type"`
	FromAccount        FromAccount         `json:"from_account"`
	ID                 int64               `json:"id"`
	OwnerAccount       interface{}         `json:"owner_account"`
	PaymentToken       *PaymentToken       `json:"payment_token"`
	Quantity           string              `json:"quantity"`
	Seller             *FromAccount        `json:"seller"`
	StartingPrice      *string             `json:"starting_price"`
	ToAccount          interface{}         `json:"to_account"`
	TotalPrice         interface{}         `json:"total_price"`
	Transaction        interface{}         `json:"transaction"`
	WinnerAccount      interface{}         `json:"winner_account"`
}

type Asset struct {
	ID                   int64         `json:"id"`
	TokenID              string        `json:"token_id"`
	NumSales             int64         `json:"num_sales"`
	BackgroundColor      interface{}   `json:"background_color"`
	ImageURL             string        `json:"image_url"`
	ImagePreviewURL      *string       `json:"image_preview_url"`
	ImageThumbnailURL    *string       `json:"image_thumbnail_url"`
	ImageOriginalURL     *string       `json:"image_original_url"`
	AnimationURL         *string       `json:"animation_url"`
	AnimationOriginalURL *string       `json:"animation_original_url"`
	Name                 *string       `json:"name"`
	Description          *string       `json:"description"`
	ExternalLink         *string       `json:"external_link"`
	AssetContract        AssetContract `json:"asset_contract"`
	Permalink            string        `json:"permalink"`
	Collection           Collection    `json:"collection"`
	Decimals             *int64        `json:"decimals"`
	TokenMetadata        *string       `json:"token_metadata"`
	Owner                FromAccount   `json:"owner"`
}

type AssetContract struct {
	Address                     string            `json:"address"`
	AssetContractType           AssetContractType `json:"asset_contract_type"`
	CreatedDate                 string            `json:"created_date"`
	Name                        string            `json:"name"`
	NftVersion                  *string           `json:"nft_version"`
	OpenseaVersion              *string           `json:"opensea_version"`
	Owner                       *int64            `json:"owner"`
	SchemaName                  SchemaName        `json:"schema_name"`
	Symbol                      string            `json:"symbol"`
	TotalSupply                 *string           `json:"total_supply"`
	Description                 *string           `json:"description"`
	ExternalLink                *string           `json:"external_link"`
	ImageURL                    *string           `json:"image_url"`
	DefaultToFiat               bool              `json:"default_to_fiat"`
	DevBuyerFeeBasisPoints      int64             `json:"dev_buyer_fee_basis_points"`
	DevSellerFeeBasisPoints     int64             `json:"dev_seller_fee_basis_points"`
	OnlyProxiedTransfers        bool              `json:"only_proxied_transfers"`
	OpenseaBuyerFeeBasisPoints  int64             `json:"opensea_buyer_fee_basis_points"`
	OpenseaSellerFeeBasisPoints int64             `json:"opensea_seller_fee_basis_points"`
	BuyerFeeBasisPoints         int64             `json:"buyer_fee_basis_points"`
	SellerFeeBasisPoints        int64             `json:"seller_fee_basis_points"`
	PayoutAddress               *string           `json:"payout_address"`
}

type Collection struct {
	BannerImageURL              *string               `json:"banner_image_url"`
	ChatURL                     interface{}           `json:"chat_url"`
	CreatedDate                 string                `json:"created_date"`
	DefaultToFiat               bool                  `json:"default_to_fiat"`
	Description                 string                `json:"description"`
	DevBuyerFeeBasisPoints      string                `json:"dev_buyer_fee_basis_points"`
	DevSellerFeeBasisPoints     string                `json:"dev_seller_fee_basis_points"`
	DiscordURL                  *string               `json:"discord_url"`
	DisplayData                 DisplayData           `json:"display_data"`
	ExternalURL                 *string               `json:"external_url"`
	Featured                    bool                  `json:"featured"`
	FeaturedImageURL            *string               `json:"featured_image_url"`
	Hidden                      bool                  `json:"hidden"`
	SafelistRequestStatus       SafelistRequestStatus `json:"safelist_request_status"`
	ImageURL                    string                `json:"image_url"`
	IsSubjectToWhitelist        bool                  `json:"is_subject_to_whitelist"`
	LargeImageURL               string                `json:"large_image_url"`
	MediumUsername              *string               `json:"medium_username"`
	Name                        string                `json:"name"`
	OnlyProxiedTransfers        bool                  `json:"only_proxied_transfers"`
	OpenseaBuyerFeeBasisPoints  string                `json:"opensea_buyer_fee_basis_points"`
	OpenseaSellerFeeBasisPoints string                `json:"opensea_seller_fee_basis_points"`
	PayoutAddress               *string               `json:"payout_address"`
	RequireEmail                bool                  `json:"require_email"`
	ShortDescription            interface{}           `json:"short_description"`
	Slug                        string                `json:"slug"`
	TelegramURL                 interface{}           `json:"telegram_url"`
	TwitterUsername             *string               `json:"twitter_username"`
	InstagramUsername           *string               `json:"instagram_username"`
	WikiURL                     interface{}           `json:"wiki_url"`
}

type DisplayData struct {
	CardDisplayStyle CardDisplayStyle `json:"card_display_style"`
}

type FromAccount struct {
	User          *User      `json:"user"`
	ProfileImgURL string     `json:"profile_img_url"`
	Address       string     `json:"address"`
	Config        ConfigEnum `json:"config"`
}

type User struct {
	Username *string `json:"username"`
}

type PaymentToken struct {
	ID       int64   `json:"id"`
	Symbol   Symbol  `json:"symbol"`
	Address  Address `json:"address"`
	ImageURL string  `json:"image_url"`
	Name     Name    `json:"name"`
	Decimals int64   `json:"decimals"`
	EthPrice string  `json:"eth_price"`
	UsdPrice string  `json:"usd_price"`
}

type AssetContractType string

const (
	NonFungible  AssetContractType = "non-fungible"
	SemiFungible AssetContractType = "semi-fungible"
)

type SchemaName string

const (
	Erc1155 SchemaName = "ERC1155"
	Erc721  SchemaName = "ERC721"
)

type CardDisplayStyle string

const (
	Contain CardDisplayStyle = "contain"
	Cover   CardDisplayStyle = "cover"
)

type SafelistRequestStatus string

const (
	Approved     SafelistRequestStatus = "approved"
	NotRequested SafelistRequestStatus = "not_requested"
	Verified     SafelistRequestStatus = "verified"
)

type ConfigEnum string

const (
	Affiliate ConfigEnum = "affiliate"
	Config    ConfigEnum = ""
	Moderator ConfigEnum = "moderator"
)

type ContractAddressEnum string

const (
	ContractAddress                               ContractAddressEnum = ""
	The0X7Be8076F4Ea4A4Ad08075C2508E481D6C946D12B ContractAddressEnum = "0x7be8076f4ea4a4ad08075c2508e481d6c946d12b"
)

type EventType string

const (
	Created      EventType = "created"
	OfferEntered EventType = "offer_entered"
)

type Address string

const (
	The0X0000000000000000000000000000000000000000 Address = "0x0000000000000000000000000000000000000000"
	The0Xc02Aaa39B223Fe8D0A0E5C4F27Ead9083C756Cc2 Address = "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
)

type Name string

const (
	Ether        Name = "Ether"
	WrappedEther Name = "Wrapped Ether"
)

type Symbol string

const (
	Eth  Symbol = "ETH"
	Weth Symbol = "WETH"
)
